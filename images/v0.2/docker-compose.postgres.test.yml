version: "2.3"

networks:
  default:

volumes:
  powerdns-admin-upload:
  powerdns-admin-logs:
  powerdns-admin-db:
  # PostgreSQL
  powerdns-admin-postgresql-data:
  powerdns-postgresql-data:

services:
  # https://docs.docker.com/docker-hub/builds/automated-testing/
  sut:
    build:
      context: ./test
      dockerfile: Dockerfile
    depends_on:
      - powerdns-admin
      - powerdns-admin-postgresql
      - pdns-server
      - pdns-postgresql
    volumes_from:
      - powerdns-admin
    environment:
      - DOCKER_TEST_CONTAINER=powerdns-admin
      - DOCKER_WEB_CONTAINER=powerdns-admin
      - DOCKER_WEB_PORT=${PDA_PORT}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  powerdns-admin:
    # For development or CI, tag build from local Dockerfile
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        - TAG=${DOCKER_TAG}
        - VCS_REF=${VCS_REF}
        - BUILD_DATE=${BUILD_DATE}
    image: ${IMAGE_NAME}
    hostname: powerdns-admin
    container_name: powerdns-admin
    mem_limit: 256M
    memswap_limit: 256M
    healthcheck:
      test: ["CMD", "wget","--output-document=-","--quiet","--tries=1","http://127.0.0.1:9191/"]
    ports:
      - "9191:${PDA_PORT}"
    volumes:
      - powerdns-admin-upload:/var/www/powerdns-admin/upload
      - powerdns-admin-logs:/var/www/powerdns-admin/logs
      - powerdns-admin-db:/var/www/powerdns-admin/db
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    logging:
      driver: json-file
      options:
        max-size: 50m
    # PostgreSQL
    depends_on:
      powerdns-admin-postgresql:
        condition: service_healthy
    networks:
      - default
    environment:
      # Database configuration
      - PDA_DB_NAME=${PDA_DB_NAME}
      - PDA_DB_USER=${PDA_DB_USER}
      - PDA_DB_PASSWORD=${PDA_DB_PASSWORD}
      # PostgreSQL
      - PDA_DB_TYPE=postgresql
      - PDA_DB_HOST=powerdns-admin-postgresql
      - PDA_DB_PORT=5432
      # Gunicorn configuration
      - BIND_ADDRESS=0.0.0.0
      - PORT=${PDA_PORT}
      # Admin user
      - ADMIN_USERNAME=${PDA_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${PDA_ADMIN_PASSWORD}
      - ADMIN_FIRSTNAME=${PDA_ADMIN_FIRSTNAME}
      - ADMIN_LASTNAME=${PDA_ADMIN_LASTNAME}
      - ADMIN_EMAIL=${PDA_ADMIN_EMAIL}
      # PowerDNS-Admin configuration
      - PDNS_PROTO=${PDNS_PROTO}
      - PDNS_HOST=pdns-server
      - PDNS_PORT=${PDNS_PORT}
      - PDNS_API_URL=${PDNS_PROTO}://pdns-server:${PDNS_PORT}/api/v1
      - PDNS_API_KEY=${PDNS_API_KEY}
      - SIGNUP_ENABLED=False

  # PostgreSQL
  powerdns-admin-postgresql:
    image: postgres:10-alpine
    hostname: powerdns-admin-postgresql
    container_name: powerdns-admin-postgresql
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PDA_DB_USER}", "-d", "${PDA_DB_NAME}"]
      interval: 60s
      retries: 5
    volumes:
      - powerdns-admin-postgresql-data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - POSTGRES_DB=${PDA_DB_NAME}
      - POSTGRES_USER=${PDA_DB_USER}
      - POSTGRES_PASSWORD=${PDA_DB_PASSWORD}

  pdns-server:
    image: monogramm/docker-powerdns:develop
    hostname: pdns-server
    container_name: pdns-server
    restart: always
    ports:
      - "5053:53"
      - "5053:53/udp"
    depends_on:
      pdns-postgresql:
        condition: service_healthy
    networks:
      - default
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - AUTOCONF=postgres
      # PostgreSQL
      - PGSQL_HOST=pdns-postgresql
      - PGSQL_PORT=5432
      - PGSQL_DB=${PDNS_DB_NAME}
      - PGSQL_USER=${PDNS_DB_USER}
      - PGSQL_PASS=${PDNS_DB_PASSWORD}
      - PGSQL_DNSSEC=no
      - PDNS_API=yes
      - PDNS_API_KEY=${PDNS_API_KEY}
      - PDNS_WEBSERVER_ADDRESS=0.0.0.0
      - PDNS_WEBSERVER_PORT=${PDNS_PORT}
      - PDNS_WEBSERVER_ALLOW_FROM=${PDNS_WEBSERVER_ALLOW_FROM}/0
      - PDNS_SOA_REFRESH_DEFAULT=14400

  pdns-postgresql:
    image: postgres:10-alpine
    hostname: pdns-postgresql
    container_name: pdns-postgresql
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PDNS_DB_USER}", "-d", "${PDNS_DB_NAME}"]
      interval: 60s
      retries: 5
    volumes:
      - powerdns-postgresql-data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      - POSTGRES_DB=${PDNS_DB_NAME}
      - POSTGRES_USER=${PDNS_DB_USER}
      - POSTGRES_PASSWORD=${PDNS_DB_PASSWORD}
