dist: trusty
sudo: required

services: docker

language: bash

branches:
  only:
    - master

before_script:
  - env | sort
  - name="powerdns-admin"
  #- image="monogramm/docker-powerdns-admin:travis-${VERSION}${VARIANT:+-$VARIANT}"
  - dir="images/${VERSION}/"

script:
  #- travis_retry docker build -t "$image" "$dir"
  - cd "$dir"
  - travis_retry travis_wait 60 docker-compose build -f docker-compose_$COMPOSE.yml
  - docker images
  - travis_retry docker-compose up -d -f docker-compose_$COMPOSE.yml && sleep 60
  - docker-compose ps -f docker-compose_$COMPOSE.yml
  - docker-compose logs -f docker-compose_$COMPOSE.yml
  - docker-compose ps -f docker-compose_$COMPOSE.yml "$name" | grep "Up"
  - echo 'Wait until everything ready (2-3 minutes)' && sleep 180
  - docker-compose ps -f docker-compose_$COMPOSE.yml
  - docker-compose logs -f docker-compose_$COMPOSE.yml
  - docker-compose ps -f docker-compose_$COMPOSE.yml "$name" | grep "Up"
  - docker-compose down -f docker-compose_$COMPOSE.yml
  - travis_retry docker-compose up -d -f docker-compose_$COMPOSE.yml && sleep 60
  - echo 'Wait until everything ready (2-3 minutes)' && sleep 180
  - docker-compose ps -f docker-compose_$COMPOSE.yml
  - docker-compose logs -f docker-compose_$COMPOSE.yml
  - docker-compose ps -f docker-compose_$COMPOSE.yml "$name" | grep "Up"

notifications:
  email: false

matrix:
  allow_failures:
    - env: VERSION=v0.1 VARIANT=alpine COMPOSE=mysql
    - env: VERSION=v0.1 VARIANT=alpine COMPOSE=postgres
    - env: VERSION=v0.1 VARIANT=alpine COMPOSE=sqlite

env: # Environments
    - VERSION=master VARIANT=alpine COMPOSE=sqlite
    - VERSION=master VARIANT=alpine COMPOSE=postgres
    - VERSION=master VARIANT=alpine COMPOSE=mysql
    - VERSION=v0.1 VARIANT=alpine COMPOSE=sqlite
    - VERSION=v0.1 VARIANT=alpine COMPOSE=postgres
    - VERSION=v0.1 VARIANT=alpine COMPOSE=mysql
